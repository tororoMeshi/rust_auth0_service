# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*
lerna-debug.log*
package-lock.json
.pnpm-debug.log

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*
lerna-debug.log*

# Environment variables
.env

# OS generated files
.DS_Store
Thumbs.db

# Editor directories and files
.idea/
.vscode/
*.sublime-workspace

# MacOS generated files
.DS_Store
.AppleDouble
.LSOverride

# Coverage directory used by testing tools
coverage/
.nyc_output/

# Optional npm cache directory
.npm/
.pnpm/

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Dependency directories
node_modules/
jspm_packages/

# Optional stylelint cache
.stylelintcache

# TypeScript cache
*.tsbuildinfo

# Dist directory for build artifacts
dist/
build/

